version: '3.4'

services:
  postgres:
    container_name: postgres
    image: postgres:latest

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    depends_on: [postgres]

  redis:
    container_name: redis
    image: redis:latest

  seq:
    container_name: seq
    image: datalust/seq:latest

  minio:
    container_name: minio
    image: quay.io/minio/minio

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management

  # Monitoring services
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
      
  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    depends_on: 
    - prometheus

  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./configs/nginx.conf:/etc/nginx/nginx.conf
      - ./configs/nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - book.api
      - order.api
      - email.api
    restart: always

  book.api:
    container_name: book.api
    image: ${DOCKER_REGISTRY-}bookapi
    build:
      context: . 
      dockerfile: ../Services/Book/Api/Dockerfile
    depends_on: [minio, redis, postgres, rabbitmq]
  
  order.api:
    container_name: order.api
    image: ${DOCKER_REGISTRY-}orderapi
    build:
      context: . 
      dockerfile: ../Services/Order/Api/Dockerfile
    depends_on: [postgres, redis, rabbitmq]
  
  email.api:
    container_name: email.api
    image: ${DOCKER_REGISTRY-}emailapi
    build:
      context: . 
      dockerfile: ../Services/Email/Api/Dockerfile
    depends_on: [rabbitmq]
    
  monitoring.api:
    container_name: monitoring.api
    image: ${DOCKER_REGISTRY-}monitoringapi
    build:
      context: .
      dockerfile: ../Services/Monitoring/Monitoring.Api/Dockerfile
    depends_on: [book.api, order.api]
